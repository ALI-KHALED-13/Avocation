{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation\\\\client\\\\src\\\\Components\\\\HomeComponents\\\\AvocatasArea.js\";\nimport React from \"react\";\nimport Avocata from './Avocata';\nimport AvocataForm from \"../SubComponents/AvocataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AvocatasArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avocatas: []\n    };\n    this.controller = new AbortController();\n    this.updataAvocatas = this.updataAvocatas.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/all-avocatas', {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        createdBefore: Date.now()\n      }),\n      signal: this.controller.signal\n    }).then(resp => resp.json()).then(avocatas => {\n      var _this$state$avocatas$;\n\n      if (avocatas[0]._id === ((_this$state$avocatas$ = this.state.avocatas[0]) === null || _this$state$avocatas$ === void 0 ? void 0 : _this$state$avocatas$._id)) {\n        // no new stuff\n        return;\n      }\n\n      this.updataAvocatas(avocatas);\n    }).catch(err => {\n      if (err.name === \"AbortError\") return;\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (entries[0].target.childElementCount !== 2) return; // it's the loading...\n\n      if (entries[0].isIntersecting) {\n        feedSection.lastElementChild.style.visibility = \"visible\"; //loading text\n\n        fetch('/all-avocatas', {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            createdBefore: this.state.avocatas[this.state.avocatas.length - 1].createdAt\n          }),\n          signal: this.controller.signall\n        }).then(resp => resp.json()).then(avocatas => {\n          if (avocatas.length > 0) {\n            this.updataAvocatas(this.state.avocatas.concat(avocatas));\n          }\n\n          feedSection.lastElementChild.style.visibility = \"hidden\";\n          observer.unobserve(lastAvoca);\n        }).catch(err => {\n          if (err.name === \"AbortError\") return;\n          console.log(err);\n        });\n      }\n    }, {\n      threeshold: 0.1\n    });\n    let feedSection = document.getElementById('feed');\n    let lastAvoca = feedSection.children[feedSection.children.length - 2]; //-1 is the loading\n\n    observer.observe(lastAvoca);\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  updataAvocatas(arr) {\n    this.setState({\n      avocatas: arr\n    });\n    document.getElementById('feed').lastElementChild.style.visibility = \"hidden\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"feed\",\n      children: [this.props.user && /*#__PURE__*/_jsxDEV(AvocataForm, {\n        user: this.props.user,\n        avocatas: this.state.avocatas,\n        updataAvocatas: this.updataAvocatas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Avocata, {\n        user: false,\n        users: this.props.users,\n        data: {\n          text: \"for my beloved Mother, who used to love drinking avocado :)\",\n          creator: \"Azza\",\n          tags: \"THANKS\",\n          filename: \"أمي.jpg\",\n          contentType: \"image/jpeg\",\n          createdAt: \"Forever\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), this.state.avocatas.length > 0 && this.state.avocatas.map(avocata => {\n        if (this.props.chosenCategs.some(categ => avocata.tags.indexOf(categ) === -1)) {\n          //catcha point: [''].some() runs, while [].some() returns false, always\n          return null; //'blahblah'.indexOf('') === -1 returns false cause '' exists XD\n        }\n\n        return /*#__PURE__*/_jsxDEV(Avocata, {\n          data: avocata,\n          user: this.props.user,\n          users: this.props.users,\n          avocatas: this.state.avocatas,\n          updataAvocatas: this.updataAvocatas\n        }, avocata.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 64\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: \"Loading fresh avocatas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AvocatasArea; //react.memo the who;e area???","map":{"version":3,"sources":["D:/ali/programming/React/avocation/client/src/Components/HomeComponents/AvocatasArea.js"],"names":["React","Avocata","AvocataForm","AvocatasArea","Component","constructor","props","state","avocatas","controller","AbortController","updataAvocatas","bind","componentDidMount","fetch","method","headers","body","JSON","stringify","createdBefore","Date","now","signal","then","resp","json","_id","catch","err","name","console","log","componentDidUpdate","prevProps","prevState","observer","IntersectionObserver","entries","target","childElementCount","isIntersecting","feedSection","lastElementChild","style","visibility","length","createdAt","signall","concat","unobserve","lastAvoca","threeshold","document","getElementById","children","observe","componentWillUnmount","abort","arr","setState","render","user","users","text","creator","tags","filename","contentType","map","avocata","chosenCategs","some","categ","indexOf"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Avocata from './Avocata';\r\nimport AvocataForm from \"../SubComponents/AvocataForm\";\r\n\r\n\r\nclass AvocatasArea extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            avocatas: [],\r\n        };\r\n        this.controller = new AbortController();\r\n        this.updataAvocatas = this.updataAvocatas.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/all-avocatas', {\r\n            method: \"PUT\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({createdBefore: Date.now()}),\r\n            signal: this.controller.signal,\r\n        })\r\n        .then(resp=> resp.json())\r\n        .then(avocatas=> {\r\n            if (avocatas[0]._id === this.state.avocatas[0]?._id){// no new stuff\r\n                return;\r\n            }\r\n            this.updataAvocatas(avocatas);   \r\n        })\r\n        .catch(err=>{\r\n            if (err.name === \"AbortError\") return;\r\n            console.log(err)\r\n        });\r\n    }\r\n    \r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n\r\n        const observer = new IntersectionObserver((entries, observer)=>{\r\n\r\n            if (entries[0].target.childElementCount !== 2) return // it's the loading...\r\n            if (entries[0].isIntersecting){\r\n                feedSection.lastElementChild.style.visibility = \"visible\"; //loading text\r\n\r\n                fetch('/all-avocatas', {\r\n                    method: \"PUT\",\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                        createdBefore: this.state.avocatas[this.state.avocatas.length - 1].createdAt\r\n                    }),\r\n                    signal: this.controller.signall,\r\n                })\r\n                .then(resp=> resp.json())\r\n                .then(avocatas=> {\r\n                    if (avocatas.length > 0){\r\n                        this.updataAvocatas(this.state.avocatas.concat(avocatas));\r\n                    }\r\n                    feedSection.lastElementChild.style.visibility = \"hidden\";\r\n                    observer.unobserve(lastAvoca); \r\n                })\r\n                .catch(err=>{\r\n                    if (err.name === \"AbortError\") return;\r\n                    console.log(err)\r\n                });\r\n            }\r\n        }, {threeshold: 0.1});\r\n\r\n        let feedSection = document.getElementById('feed');\r\n        let lastAvoca = feedSection.children[feedSection.children.length - 2]; //-1 is the loading\r\n        observer.observe(lastAvoca);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.controller.abort();\r\n    }\r\n\r\n    updataAvocatas(arr){ \r\n        this.setState({avocatas: arr});\r\n        document.getElementById('feed').lastElementChild.style.visibility = \"hidden\";\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <section id=\"feed\">\r\n                {this.props.user && <AvocataForm \r\n                                        user={this.props.user} avocatas={this.state.avocatas} \r\n                                        updataAvocatas={this.updataAvocatas}\r\n                                    />}\r\n\r\n                <Avocata user={false} users={this.props.users} data={{\r\n                    text: \"for my beloved Mother, who used to love drinking avocado :)\",\r\n                    creator: \"Azza\",\r\n                    tags: \"THANKS\",\r\n                    filename: \"أمي.jpg\",\r\n                    contentType: \"image/jpeg\",\r\n                    createdAt: \"Forever\",\r\n\r\n                }} />\r\n\r\n                {this.state.avocatas.length > 0 && this.state.avocatas\r\n                                                    .map(avocata=>{\r\n                                                        if (this.props.chosenCategs.some(categ=> avocata.tags.indexOf(categ) === -1)){ //catcha point: [''].some() runs, while [].some() returns false, always\r\n                                                            return null; //'blahblah'.indexOf('') === -1 returns false cause '' exists XD\r\n                                                        }\r\n                                                        return <Avocata key={avocata.createdAt} data={avocata} \r\n                                                                user={this.props.user} users={this.props.users}\r\n                                                                avocatas={this.state.avocatas} updataAvocatas={this.updataAvocatas}\r\n                                                                />\r\n                                                    })\r\n                }\r\n                 <article>Loading fresh avocatas...</article> \r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvocatasArea; //react.memo the who;e area???\r\n\r\n"]},"metadata":{},"sourceType":"module"}