{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation\\\\client\\\\src\\\\Components\\\\LogInPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogInPage = ({\n  users,\n  setUser\n}) => {\n  _s();\n\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [passVisibile, setPassVisible] = useState(false);\n  const [toBeRememebered, setToBeRememebered] = useState(false);\n  const [userFound, setUserFound] = useState(true);\n  const history = useHistory();\n\n  const handleLogging = ev => {\n    ev.preventDefault();\n    const userMatched = users.find(user => user.userName === identifier || user.email === identifier);\n    if (!userMatched || userMatched.password !== password) return setUserFound(false);\n    fetch('/user', {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(userMatched)\n    }).catch(console.log);\n    userMatched.logged = true;\n    localStorage.setItem('user', JSON.stringify(userMatched));\n\n    if (toBeRememebered) {\n      localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 60 * 48).toISOString()); //remembered for two days\n    } else {\n      localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 120).toISOString()); //2 hours after logging in\n    }\n\n    setUser(userMatched);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"signing\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogging,\n      children: [userFound || /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"warning\",\n        children: \"User name/email or password is not correct or doesn't exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"identifier\",\n                children: \"User Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 30\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"identifier\",\n                name: \"identifier\",\n                placeholder: \"username or email\",\n                required: true,\n                value: identifier,\n                onChange: ev => setIdentifier(ev.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"pass-feild\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: passVisibile ? 'text' : 'password',\n                name: \"password\",\n                pattern: \".{5,}\",\n                id: \"password\",\n                required: true,\n                value: password,\n                onChange: ev => setPassword(ev.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setPassVisible(!passVisibile),\n                children: passVisibile ? \"Hide\" : \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontSize: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: 'auto'\n          },\n          type: \"checkbox\",\n          checked: toBeRememebered,\n          onChange: () => setToBeRememebered(!toBeRememebered)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \" Remmeber Me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"don't have an account yet?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-up\",\n        children: \" sign up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInPage, \"4wrtu2juTpz6NOfvKufoLe5oROE=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogInPage;\nexport default LogInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInPage\");","map":{"version":3,"sources":["D:/ali/programming/React/avocation/client/src/Components/LogInPage.js"],"names":["useState","Link","useHistory","LogInPage","users","setUser","identifier","setIdentifier","password","setPassword","passVisibile","setPassVisible","toBeRememebered","setToBeRememebered","userFound","setUserFound","history","handleLogging","ev","preventDefault","userMatched","find","user","userName","email","fetch","method","headers","body","JSON","stringify","catch","console","log","logged","localStorage","setItem","Date","now","toISOString","push","target","value","fontSize","width"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst LogInPage =({users, setUser})=>{\r\n    const [identifier, setIdentifier] = useState('')\r\n    const [password, setPassword] = useState('');\r\n    const [passVisibile, setPassVisible] = useState(false);\r\n    const [toBeRememebered, setToBeRememebered] = useState(false);\r\n    const [userFound, setUserFound] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const handleLogging =(ev)=>{\r\n        ev.preventDefault();\r\n        const userMatched = users.find(user=> user.userName === identifier || user.email === identifier);\r\n\r\n        if (!userMatched || userMatched.password !== password) return setUserFound(false);\r\n        \r\n        \r\n        fetch('/user', {\r\n            method: 'PUT',\r\n            headers: {\"Content-Type\": 'application/json'},\r\n            body: JSON.stringify(userMatched),\r\n        })\r\n        .catch(console.log);\r\n\r\n        userMatched.logged = true;\r\n\r\n        localStorage.setItem('user', JSON.stringify(userMatched));\r\n        if (toBeRememebered){\r\n            localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 60 * 48 ).toISOString()); //remembered for two days\r\n        }else {\r\n            localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 120 ).toISOString()); //2 hours after logging in\r\n        }\r\n\r\n        setUser(userMatched);\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <main className=\"signing\">\r\n            <form onSubmit={handleLogging}>\r\n                {userFound || <span className=\"warning\">User name/email or password is not correct or doesn't exist</span>}\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td> <label htmlFor=\"identifier\">User Name:</label> </td>\r\n                        <td> <input id='identifier' name=\"identifier\"  placeholder=\"username or email\"\r\n                                    required value={identifier} onChange={(ev)=> setIdentifier(ev.target.value)}\r\n                            />\r\n                        </td>\r\n                        <td> </td>\r\n                    </tr>\r\n\r\n                    <tr className=\"pass-feild\">\r\n                        <td> \r\n                            <label htmlFor=\"password\">Password:</label> \r\n                        </td>\r\n                        <td>\r\n                            <input type={passVisibile? 'text':'password'} name=\"password\" pattern=\".{5,}\" \r\n                                   id='password' required value={password} onChange={(ev)=> setPassword(ev.target.value)}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={()=> setPassVisible(!passVisibile)}> \r\n                                {passVisibile? \"Hide\":\"Show\"}\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <label style={{fontSize: '16px'}}>\r\n                    <input style={{width: 'auto'}} type=\"checkbox\" checked={toBeRememebered} onChange={()=> setToBeRememebered(!toBeRememebered)}/> Remmeber Me\r\n                </label>\r\n                <br />\r\n                <br />\r\n                <button>Log In</button>\r\n            </form>\r\n\r\n            <p>\r\n                don't have an account yet? \r\n                <Link to=\"/sign-up\"> sign up </Link>\r\n            </p>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default LogInPage\r\n\r\n"]},"metadata":{},"sourceType":"module"}