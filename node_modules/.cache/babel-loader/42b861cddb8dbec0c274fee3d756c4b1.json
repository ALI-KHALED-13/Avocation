{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation.com\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState('');\n  useEffect(() => {\n    callServer().then(result => setData(result.express)).catch(console.error);\n  }, []);\n\n  const callServer = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"this is the data from the server --- \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n\n_c = App;\nexport default App;\n/*\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <p className=\"App-intro\">{this.state.data}</p>\r\n      </div>\r\n    );\r\n  }\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ali/programming/React/avocation.com/client/src/App.js"],"names":["React","useState","useEffect","App","data","setData","callServer","then","result","express","catch","console","error","response","fetch","body","json","status","Error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAGA,MAAMC,GAAG,GAAE,MAAI;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,UAAU,GACTC,IADD,CACMC,MAAM,IAAGH,OAAO,CAACG,MAAM,CAACC,OAAR,CADtB,EAECC,KAFD,CAEOC,OAAO,CAACC,KAFf;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMN,UAAU,GAAG,YAAS;AAC1B,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,WAAOJ,IAAP;AACD,GARD;;AAUA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,0DAA0CX,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;GAAMD,G;;KAAAA,G;AA4BN,eAAeA,GAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst App =()=>{\r\n  const [data, setData] = useState('');\r\n\r\n  useEffect(()=>{\r\n    callServer()\r\n    .then(result=> setData(result.express))\r\n    .catch(console.error);\r\n  }, [])\r\n\r\n  const callServer = async()=>{\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Hello app</h1>\r\n      <h2>this is the data from the server --- {data}</h2>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n/*\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <p className=\"App-intro\">{this.state.data}</p>\r\n      </div>\r\n    );\r\n  }\r\n}*/"]},"metadata":{},"sourceType":"module"}