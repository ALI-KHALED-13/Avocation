{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation\\\\client\\\\src\\\\Components\\\\HomeComponents\\\\Avocata.js\";\nimport React from 'react';\nimport mavatar from '../../media/avatar-m.png';\nimport favatar from '../../media/avatar-f.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Avocata = ({\n  data,\n  users,\n  user,\n  avocatas,\n  updataAvocatas\n}) => {\n  const author = users.find(user => user.userName === data.creator);\n  const mediaType = data.contentType;\n\n  const insertMedia = () => {\n    const arrayBuffer = toArrayBuffer(data.fileBuffer.data);\n    const file = new File([arrayBuffer], data.fileName, {\n      type: mediaType\n    });\n    const fileURL = URL.createObjectURL(file);\n\n    if (mediaType.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"data.fileName\",\n        src: fileURL,\n        className: \"media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        className: \"media\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: fileURL,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  function toArrayBuffer(buffer) {\n    var ab = new ArrayBuffer(buffer.length);\n    var view = new Uint8Array(ab);\n\n    for (var i = 0; i < buffer.length; ++i) view[i] = buffer[i];\n\n    return ab;\n  }\n\n  const deleteAvoca = ev => {\n    fetch('avocata', {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: data._id\n      })\n    }).then(resp => resp.json()).then(message => {\n      if (message.deleted) {\n        updataAvocatas(avocatas.filter(avoca => avoca !== data));\n        alert('avocata is deleted successfully');\n      } else {\n        alert(\"couldn't be deleted\");\n        console.log(message.error);\n      }\n    }).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"avocata\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: author.gender === 'male' ? mavatar : favatar,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [author.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-created\",\n          children: data.createdAt.slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), user.userName === author.userName && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteAvoca,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          textAlign: data.text.match(/\\w/) ? 'left' : 'center'\n        },\n        children: data.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), mediaType !== 'undefined' && insertMedia()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Avocata;\nexport default _c2 = /*#__PURE__*/React.memo(Avocata);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Avocata\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ali/programming/React/avocation/client/src/Components/HomeComponents/Avocata.js"],"names":["React","mavatar","favatar","Avocata","data","users","user","avocatas","updataAvocatas","author","find","userName","creator","mediaType","contentType","insertMedia","arrayBuffer","toArrayBuffer","fileBuffer","file","File","fileName","type","fileURL","URL","createObjectURL","startsWith","buffer","ab","ArrayBuffer","length","view","Uint8Array","i","deleteAvoca","ev","fetch","method","headers","body","JSON","stringify","id","_id","then","resp","json","message","deleted","filter","avoca","alert","console","log","error","catch","gender","name","createdAt","slice","textAlign","text","match","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport mavatar from '../../media/avatar-m.png';\r\nimport favatar from '../../media/avatar-f.png';\r\n\r\nconst Avocata =({data, users, user, avocatas, updataAvocatas})=>{\r\n    const author = users.find(user=> user.userName === data.creator);\r\n    const mediaType = data.contentType;\r\n\r\n    const insertMedia =()=>{\r\n        const arrayBuffer = toArrayBuffer(data.fileBuffer.data)\r\n        const file = new File([arrayBuffer], data.fileName, {type: mediaType});\r\n        const fileURL = URL.createObjectURL(file);\r\n        \r\n        if (mediaType.startsWith('image/')){\r\n            return <img alt=\"data.fileName\" src={fileURL} className=\"media\"/>\r\n        }else {\r\n            return (\r\n                <audio controls className=\"media\">\r\n                    <source src={fileURL} type=\"audio/mpeg\"></source>\r\n                </audio>\r\n                )\r\n        }\r\n    }\r\n\r\n    function toArrayBuffer(buffer) {\r\n        var ab = new ArrayBuffer(buffer.length);\r\n        var view = new Uint8Array(ab);\r\n        for (var i = 0; i < buffer.length; ++i) view[i] = buffer[i];\r\n        return ab;\r\n    }\r\n\r\n    const deleteAvoca =(ev)=>{\r\n        fetch('avocata', {\r\n            method:\"delete\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({id: data._id}),\r\n        })\r\n        .then(resp=> resp.json())\r\n        .then(message=> {\r\n            if (message.deleted){\r\n                updataAvocatas(avocatas.filter(avoca=> avoca !== data));\r\n                alert('avocata is deleted successfully')   \r\n            }else{\r\n                alert(\"couldn't be deleted\")\r\n                console.log(message.error);\r\n            }\r\n        }).catch(console.log)\r\n    }\r\n\r\n    return (\r\n        <article className=\"avocata\">\r\n            <div className=\"header\">\r\n                <img src={author.gender === 'male'? mavatar: favatar} alt=\"avatar\"/>\r\n\r\n                <p>{author.name}<br/>\r\n                <span className=\"date-created\">{data.createdAt.slice(0,10)}</span>\r\n                </p>\r\n\r\n                {user.userName === author.userName &&<button onClick={deleteAvoca}>Delete</button>}\r\n            </div>\r\n            <div className=\"content\">\r\n                <pre style={{textAlign: data.text.match(/\\w/)? 'left':'center'}}>{data.text}</pre>\r\n                {\r\n                  mediaType !== 'undefined' &&  insertMedia()\r\n                }\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\nexport default React.memo(Avocata);"]},"metadata":{},"sourceType":"module"}