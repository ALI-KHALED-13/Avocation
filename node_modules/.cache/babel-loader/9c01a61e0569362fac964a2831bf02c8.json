{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation\\\\client\\\\src\\\\Components\\\\HomeComponents\\\\AvocatasArea.js\";\nimport React from \"react\";\nimport Avocata from './Avocata';\nimport AvocataForm from \"../SubComponents/AvocataForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AvocatasArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avocatas: []\n    };\n    this.updataAvocatas = this.updataAvocatas.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/all-avocatas', {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        createdBefore: Date.now()\n      })\n    }).then(resp => resp.json()).then(avocatas => {\n      this.updataAvocatas(avocatas);\n    }).catch(console.log);\n  } ///component will unmount with session storage to imrpove rendering time\n\n\n  componentDidUpdate() {\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (entries[0].target.childElementCount !== 2) return; // it's the loading...\n\n      if (entries[0].isIntersecting) {\n        console.log(entries);\n        fetch('/all-avocatas', {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            createdBefore: this.state.avocatas[this.state.avocatas.length - 1].createdAt\n          })\n        }).then(resp => resp.json()).then(avocatas => {\n          console.log(avocatas);\n          observer.unobserve(lastAvoca);\n          this.updataAvocatas([...this.state.avocatas, avocatas]);\n        }).catch(console.log);\n      }\n    }, {\n      threeshold: 0.2\n    });\n    let feedSection = document.getElementById('feed');\n    let lastAvoca = feedSection.children[feedSection.children.length - 1];\n    observer.observe(lastAvoca);\n  }\n\n  updataAvocatas(arr) {\n    this.setState({\n      avocatas: arr\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"feed\",\n      children: [this.props.user && /*#__PURE__*/_jsxDEV(AvocataForm, {\n        user: this.props.user,\n        avocatas: this.state.avocatas,\n        updataAvocatas: this.updataAvocatas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this), this.state.avocatas.length === 0 ? /*#__PURE__*/_jsxDEV(\"article\", {\n        children: \"Loading fresh avocatas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 52\n      }, this) : this.state.avocatas.map(avocata => {\n        if (this.props.chosenCategs.some(categ => avocata.tags.indexOf(categ) === -1)) {\n          //catcha point: [''].some() runs, while [].some() returns false, always\n          return null; //'blahblah'.indexOf('') === -1 returns false cause '' exists XD\n        }\n\n        return /*#__PURE__*/_jsxDEV(Avocata, {\n          data: avocata,\n          user: this.props.user,\n          users: this.props.users,\n          avocatas: this.state.avocatas,\n          updataAvocatas: this.updataAvocatas\n        }, avocata.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 64\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AvocatasArea; //react.memo the who;e area???","map":{"version":3,"sources":["D:/ali/programming/React/avocation/client/src/Components/HomeComponents/AvocatasArea.js"],"names":["React","Avocata","AvocataForm","AvocatasArea","Component","constructor","props","state","avocatas","updataAvocatas","bind","componentDidMount","fetch","method","headers","body","JSON","stringify","createdBefore","Date","now","then","resp","json","catch","console","log","componentDidUpdate","observer","IntersectionObserver","entries","target","childElementCount","isIntersecting","length","createdAt","unobserve","lastAvoca","threeshold","feedSection","document","getElementById","children","observe","arr","setState","render","user","map","avocata","chosenCategs","some","categ","tags","indexOf","users"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Avocata from './Avocata';\r\nimport AvocataForm from \"../SubComponents/AvocataForm\";\r\n\r\n\r\nclass AvocatasArea extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {avocatas: [], };\r\n\r\n        this.updataAvocatas = this.updataAvocatas.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/all-avocatas', {\r\n            method: \"PUT\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({createdBefore: Date.now()})\r\n        })\r\n        .then(resp=> resp.json())\r\n        .then(avocatas=> {\r\n            this.updataAvocatas(avocatas);      \r\n        })\r\n        .catch(console.log);\r\n    }\r\n    ///component will unmount with session storage to imrpove rendering time\r\n    \r\n    componentDidUpdate(){\r\n        const observer = new IntersectionObserver((entries, observer)=>{\r\n            if (entries[0].target.childElementCount !== 2) return // it's the loading...\r\n            if (entries[0].isIntersecting){\r\n                console.log(entries);\r\n                fetch('/all-avocatas', {\r\n                    method: \"PUT\",\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                        createdBefore: this.state.avocatas[this.state.avocatas.length - 1].createdAt\r\n                    })\r\n                })\r\n                .then(resp=> resp.json())\r\n                .then(avocatas=> {\r\n                    console.log(avocatas);\r\n                    observer.unobserve(lastAvoca);\r\n                    this.updataAvocatas([...this.state.avocatas, avocatas]);      \r\n                })\r\n                .catch(console.log);\r\n            }\r\n        }, {threeshold: 0.2})\r\n        let feedSection = document.getElementById('feed');\r\n        let lastAvoca = feedSection.children[feedSection.children.length - 1];\r\n        observer.observe(lastAvoca)\r\n    }\r\n\r\n    updataAvocatas(arr){ this.setState({avocatas: arr}) }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <section id=\"feed\">\r\n                {this.props.user && <AvocataForm \r\n                                        user={this.props.user} avocatas={this.state.avocatas} \r\n                                        updataAvocatas={this.updataAvocatas}\r\n                                    />}\r\n\r\n                {this.state.avocatas.length === 0? <article>Loading fresh avocatas...</article> : \r\n                                                    this.state.avocatas\r\n                                                    .map(avocata=>{\r\n                                                        if (this.props.chosenCategs.some(categ=> avocata.tags.indexOf(categ) === -1)){ //catcha point: [''].some() runs, while [].some() returns false, always\r\n                                                            return null; //'blahblah'.indexOf('') === -1 returns false cause '' exists XD\r\n                                                        }\r\n                                                        return <Avocata key={avocata.createdAt} data={avocata} \r\n                                                                user={this.props.user} users={this.props.users}\r\n                                                                avocatas={this.state.avocatas} updataAvocatas={this.updataAvocatas}\r\n                                                                />\r\n                                                    })\r\n                }\r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvocatasArea; //react.memo the who;e area???\r\n\r\n"]},"metadata":{},"sourceType":"module"}