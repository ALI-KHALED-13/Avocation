{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation.com\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport HomePage from './Components/HomePage';\nimport AboutPage from './Components/AboutPage';\nimport AvocadoHeader from './Components/AvocadoHeader';\nimport ContactPage from \"./Components/ContactPage\";\nimport SignUpPage from \"./Components/SignUpPage\";\nimport LogInPage from \"./Components/LogInPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AvocadoHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact\",\n          children: /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(SignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/log-in\",\n          children: /*#__PURE__*/_jsxDEV(LogInPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n/* \r\n\r\n*/\n\n/*\r\nconst [data, setData] = useState('');\r\n\r\n  useEffect(()=>{\r\n    callServer()\r\n    .then(result=> setData(result.express))\r\n    .catch(console.error);\r\n  }, [])\r\n\r\n  const callServer = async()=>{\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  }\r\n*/\n\n/*\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <p className=\"App-intro\">{this.state.data}</p>\r\n      </div>\r\n    );\r\n  }\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ali/programming/React/avocation.com/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","HomePage","AboutPage","AvocadoHeader","ContactPage","SignUpPage","LogInPage","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,kBAAtD;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAIA,MAAMC,GAAG,GAAE,MAAI;AACb,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADF,oBAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;KAAMA,G;AA4BN,eAAeA,GAAf;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './index.css';\r\nimport HomePage from './Components/HomePage';\r\nimport AboutPage from './Components/AboutPage';\r\nimport AvocadoHeader from './Components/AvocadoHeader';\r\nimport ContactPage from \"./Components/ContactPage\";\r\nimport SignUpPage from \"./Components/SignUpPage\";\r\nimport LogInPage from \"./Components/LogInPage\";\r\n\r\n\r\n\r\nconst App =()=>{\r\n  return (\r\n    <Router>\r\n      <React.Fragment>\r\n        <AvocadoHeader /> {/*users db section*/}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path=\"/about\">\r\n            <AboutPage />\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <ContactPage />\r\n          </Route>\r\n          <Route exact path=\"/sign-up\">\r\n            <SignUpPage />\r\n          </Route>\r\n          <Route exact path=\"/log-in\">\r\n            <LogInPage />\r\n          </Route>\r\n        </Switch>\r\n      </React.Fragment>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n/* \r\n\r\n*/\r\n/*\r\nconst [data, setData] = useState('');\r\n\r\n  useEffect(()=>{\r\n    callServer()\r\n    .then(result=> setData(result.express))\r\n    .catch(console.error);\r\n  }, [])\r\n\r\n  const callServer = async()=>{\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  }\r\n*/\r\n/*\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n    // fetching the GET route from the Express server which matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <p className=\"App-intro\">{this.state.data}</p>\r\n      </div>\r\n    );\r\n  }\r\n}*/"]},"metadata":{},"sourceType":"module"}