{"ast":null,"code":"var _jsxFileName = \"D:\\\\ali\\\\programming\\\\React\\\\avocation\\\\client\\\\src\\\\Components\\\\SubComponents\\\\AvocataForm.js\",\n    _s = $RefreshSig$();\n\nimport mavatar from '../../media/avatar-m.png';\nimport favatar from '../../media/avatar-f.png';\nimport loading from './loading.gif';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagInput = /*#__PURE__*/React.lazy(_c = () => import('../SubComponents/TagInput'));\n_c2 = TagInput;\n\nconst AvocataForm = ({\n  user,\n  avocatas,\n  updataAvocatas\n}) => {\n  _s();\n\n  const [savedTags, setSavedTags] = useState([\"DRWAING\", \"SINGING\", \"POETRY\"]);\n  const [addedTags, setAddedTags] = useState([]);\n  const [uploaded, setUploaded] = useState(false);\n  const fileInput = useRef(null);\n  const [fileName, setFileName] = useState('');\n  const [isPosting, setIsPosting] = useState(false);\n\n  const saveTag = tagTxt => {\n    if (savedTags.indexOf(tagTxt) === -1) setSavedTags([...savedTags, tagTxt]);\n  };\n\n  useEffect(() => {\n    fileInput.current.addEventListener('change', ev => {\n      let file = ev.target.files[0];\n      if (!file) return setUploaded(false);\n\n      if (!file.type.startsWith('image/') && file.type !== \"audio/mpeg\") {\n        alert('please upload an image or mp3 file only');\n        ev.target.value = null;\n        setUploaded(false);\n        setFileName('');\n      } else if (file.size / 1048576 > 8) {\n        alert('file size it too big, files below 8MB only');\n        ev.target.value = null;\n        setUploaded(false);\n        setFileName('');\n      } else {\n        setUploaded(true);\n        setFileName(file.name);\n      }\n    });\n  }, []);\n\n  const submitAvocata = ev => {\n    var _fileInput$current$fi;\n\n    ev.preventDefault();\n    setIsPosting(true);\n    const form = new FormData(ev.target);\n    form.append('creator', user.userName);\n    form.append('tags', addedTags.join(' '));\n    form.append('fileName', fileName);\n    form.append('contentType', (_fileInput$current$fi = fileInput.current.files[0]) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.type); //note optional chaining\n\n    fetch('/avocata', {\n      method: \"POST\",\n      body: form\n    }).then(resp => resp.json()).then(message => {\n      setIsPosting(false);\n\n      if (message.successful) {\n        console.log('oh yeah');\n        updataAvocatas([message.avocata, ...avocatas]);\n        ev.target.reset();\n        setAddedTags([]);\n        setUploaded(false);\n      } else {\n        alert(\"couldn't post the avocata \" + message.error);\n        console.log(message.error);\n      }\n    }).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitAvocata,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"avatar\",\n        src: user.gender === 'male' ? mavatar : favatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this),\n      /*#__PURE__*/\n\n      /*isPosting &&*/\n      _jsxDEV(\"img\", {\n        alt: \"loading..\",\n        src: loading,\n        width: \"10\",\n        height: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"content/caption\",\n      required: true,\n      name: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(React.Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TagInput, {\n        savedTags: savedTags,\n        saveTag: saveTag,\n        addedTags: addedTags,\n        setAddedTags: setAddedTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), uploaded && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"fileData\",\n      children: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"upload\",\n      children: [\" Upload image/mp3\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*,audio/mpeg\",\n        ref: fileInput,\n        name: \"media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvocataForm, \"XDS1QpicpMwaKaqi98hVU7lEzzo=\");\n\n_c3 = AvocataForm;\nexport default AvocataForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TagInput$React.lazy\");\n$RefreshReg$(_c2, \"TagInput\");\n$RefreshReg$(_c3, \"AvocataForm\");","map":{"version":3,"sources":["D:/ali/programming/React/avocation/client/src/Components/SubComponents/AvocataForm.js"],"names":["mavatar","favatar","loading","React","useEffect","useRef","useState","TagInput","lazy","AvocataForm","user","avocatas","updataAvocatas","savedTags","setSavedTags","addedTags","setAddedTags","uploaded","setUploaded","fileInput","fileName","setFileName","isPosting","setIsPosting","saveTag","tagTxt","indexOf","current","addEventListener","ev","file","target","files","type","startsWith","alert","value","size","name","submitAvocata","preventDefault","form","FormData","append","userName","join","fetch","method","body","then","resp","json","message","successful","console","log","avocata","reset","error","catch","gender"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;AACA,MAAMC,QAAQ,gBAAGJ,KAAK,CAACK,IAAN,MAAW,MAAK,OAAO,2BAAP,CAAhB,CAAjB;MAAMD,Q;;AAEN,MAAME,WAAW,GAAE,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAAA;;AACnD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,CAAD,CAA1C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMa,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;;AAGA,QAAMkB,OAAO,GAAGC,MAAD,IAAU;AACrB,QAAIZ,SAAS,CAACa,OAAV,CAAkBD,MAAlB,MAA8B,CAAC,CAAnC,EAAsCX,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeY,MAAf,CAAD,CAAZ;AACzC,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAI;AAEVe,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,gBAAlB,CAAmC,QAAnC,EAA8CC,EAAD,IAAM;AAC/C,UAAIC,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgB,CAAhB,CAAX;AACA,UAAI,CAACF,IAAL,EAAW,OAAOZ,WAAW,CAAC,KAAD,CAAlB;;AACX,UAAI,CAACY,IAAI,CAACG,IAAL,CAAUC,UAAV,CAAqB,QAArB,CAAD,IAAmCJ,IAAI,CAACG,IAAL,KAAc,YAArD,EAAkE;AAC9DE,QAAAA,KAAK,CAAC,yCAAD,CAAL;AACAN,QAAAA,EAAE,CAACE,MAAH,CAAUK,KAAV,GAAkB,IAAlB;AACAlB,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH,OALD,MAKO,IAAIS,IAAI,CAACO,IAAL,GAAU,OAAV,GAAoB,CAAxB,EAA2B;AAC9BF,QAAAA,KAAK,CAAC,4CAAD,CAAL;AACAN,QAAAA,EAAE,CAACE,MAAH,CAAUK,KAAV,GAAkB,IAAlB;AACAlB,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH,OALM,MAKA;AACHH,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAG,QAAAA,WAAW,CAACS,IAAI,CAACQ,IAAN,CAAX;AACH;AACJ,KAjBD;AAmBH,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMC,aAAa,GAAGV,EAAD,IAAM;AAAA;;AACvBA,IAAAA,EAAE,CAACW,cAAH;AACAjB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMkB,IAAI,GAAG,IAAIC,QAAJ,CAAab,EAAE,CAACE,MAAhB,CAAb;AACAU,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBjC,IAAI,CAACkC,QAA5B;AACAH,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB5B,SAAS,CAAC8B,IAAV,CAAe,GAAf,CAApB;AACAJ,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBvB,QAAxB;AACAqB,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,2BAA2BxB,SAAS,CAACQ,OAAV,CAAkBK,KAAlB,CAAwB,CAAxB,CAA3B,0DAA2B,sBAA4BC,IAAvD,EAPuB,CAOuC;;AAE9Da,IAAAA,KAAK,CAAC,UAAD,EAAa;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAEP;AAFQ,KAAb,CAAL,CAICQ,IAJD,CAIMC,IAAI,IAAGA,IAAI,CAACC,IAAL,EAJb,EAKCF,IALD,CAKMG,OAAO,IAAI;AACb7B,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAI6B,OAAO,CAACC,UAAZ,EAAuB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA3C,QAAAA,cAAc,CAAC,CAACwC,OAAO,CAACI,OAAT,EAAkB,GAAG7C,QAArB,CAAD,CAAd;AACAkB,QAAAA,EAAE,CAACE,MAAH,CAAU0B,KAAV;AACAzC,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH,OAND,MAMM;AACFiB,QAAAA,KAAK,CAAC,+BAA8BiB,OAAO,CAACM,KAAvC,CAAL;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACM,KAApB;AACH;AAEJ,KAlBD,EAmBCC,KAnBD,CAmBOL,OAAO,CAACC,GAnBf;AAoBH,GA7BD;;AA+BA,sBACI;AAAM,IAAA,QAAQ,EAAEhB,aAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,QAAT;AAAkB,QAAA,GAAG,EAAE7B,IAAI,CAACkD,MAAL,KAAgB,MAAhB,GAAwB5D,OAAxB,GAAiCC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIS,IAAI,CAAC4B;AAAT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;;AAGK;AAAiB;AAAK,QAAA,GAAG,EAAC,WAAT;AAAqB,QAAA,GAAG,EAAEpC,OAA1B;AAAmC,QAAA,KAAK,EAAC,IAAzC;AAA8C,QAAA,MAAM,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAU,MAAA,WAAW,EAAC,iBAAtB;AAAwC,MAAA,QAAQ,MAAhD;AAAiD,MAAA,IAAI,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1B;AAAA,6BACI,QAAC,QAAD;AACI,QAAA,SAAS,EAAEW,SADf;AAEI,QAAA,OAAO,EAAEW,OAFb;AAGI,QAAA,SAAS,EAAET,SAHf;AAII,QAAA,YAAY,EAAEC;AAJlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,EAkBKC,QAAQ,iBACL;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,gBAA4BG;AAA5B;AAAA;AAAA;AAAA;AAAA,YAnBR,eAqBI;AAAO,MAAA,EAAE,EAAC,QAAV;AAAA,mDACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,oBAA1B;AAA+C,QAAA,GAAG,EAAED,SAApD;AAA+D,QAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/FD;;GAAMV,W;;MAAAA,W;AAiGN,eAAeA,WAAf","sourcesContent":["import mavatar from '../../media/avatar-m.png';\r\nimport favatar from '../../media/avatar-f.png';\r\nimport loading from './loading.gif';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nconst TagInput = React.lazy(()=> import('../SubComponents/TagInput'));\r\n\r\nconst AvocataForm =({user, avocatas, updataAvocatas})=>{\r\n    const [savedTags, setSavedTags] = useState([\"DRWAING\", \"SINGING\", \"POETRY\"]);\r\n    const [addedTags, setAddedTags] = useState([]);\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const fileInput = useRef(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [isPosting, setIsPosting] = useState(false);\r\n\r\n\r\n    const saveTag =(tagTxt)=>{\r\n        if (savedTags.indexOf(tagTxt) === -1) setSavedTags([...savedTags, tagTxt]);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n        fileInput.current.addEventListener('change', (ev)=>{\r\n            let file = ev.target.files[0];\r\n            if (!file) return setUploaded(false);\r\n            if (!file.type.startsWith('image/') && file.type !== \"audio/mpeg\"){\r\n                alert('please upload an image or mp3 file only')\r\n                ev.target.value = null;\r\n                setUploaded(false);\r\n                setFileName('');\r\n            } else if (file.size/1048576 > 8) {\r\n                alert('file size it too big, files below 8MB only');\r\n                ev.target.value = null;\r\n                setUploaded(false);\r\n                setFileName('');\r\n            } else {\r\n                setUploaded(true);\r\n                setFileName(file.name)\r\n            }   \r\n        });\r\n        \r\n    }, [])\r\n\r\n    const submitAvocata =(ev)=>{\r\n        ev.preventDefault();\r\n        setIsPosting(true);\r\n        const form = new FormData(ev.target);\r\n        form.append('creator', user.userName);\r\n        form.append('tags', addedTags.join(' '));\r\n        form.append('fileName', fileName);\r\n        form.append('contentType', fileInput.current.files[0]?.type); //note optional chaining\r\n\r\n        fetch('/avocata', {\r\n            method: \"POST\",\r\n            body: form,\r\n        })\r\n        .then(resp=> resp.json())\r\n        .then(message=>  {\r\n            setIsPosting(false);\r\n            if (message.successful){\r\n                console.log('oh yeah');\r\n                updataAvocatas([message.avocata, ...avocatas]);\r\n                ev.target.reset();\r\n                setAddedTags([]);\r\n                setUploaded(false);\r\n            }else {\r\n                alert(\"couldn't post the avocata \"+ message.error);\r\n                console.log(message.error);\r\n            }\r\n            \r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitAvocata}>\r\n            <div className=\"header\">\r\n                <img alt=\"avatar\" src={user.gender === 'male'? mavatar: favatar}/>\r\n                <p>{user.name}</p>\r\n                {/*isPosting &&*/ <img alt=\"loading..\" src={loading} width=\"10\" height=\"30\"/>}\r\n            </div>\r\n\r\n            <textarea placeholder=\"content/caption\" required name=\"text\"/>\r\n\r\n            <React.Suspense fallback={<div>loading...</div>}>\r\n                <TagInput \r\n                    savedTags={savedTags} \r\n                    saveTag={saveTag} \r\n                    addedTags={addedTags} \r\n                    setAddedTags={setAddedTags}\r\n                />\r\n            </React.Suspense>\r\n\r\n            {uploaded && \r\n                <span className=\"fileData\">{fileName}</span>\r\n            }\r\n            <label id=\"upload\"> Upload image/mp3\r\n                <input type=\"file\" accept=\"image/*,audio/mpeg\" ref={fileInput} name=\"media\"/>\r\n            </label>\r\n            <button>Publish</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AvocataForm;"]},"metadata":{},"sourceType":"module"}