{"version":3,"sources":["Components/LogInPage.js"],"names":["LogInPage","users","setUser","useState","identifier","setIdentifier","password","setPassword","passVisibile","setPassVisible","toBeRememebered","setToBeRememebered","userFound","setUserFound","history","useHistory","className","onSubmit","ev","preventDefault","userMatched","find","user","userName","email","fetch","method","headers","body","JSON","stringify","then","logged","localStorage","setItem","Date","now","toISOString","push","catch","console","log","htmlFor","id","name","placeholder","required","value","onChange","target","type","pattern","onClick","style","fontSize","width","checked","to"],"mappings":"qJAiGeA,UA9FE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAgChB,OACI,uBAAMC,UAAU,UAAhB,UACI,uBAAMC,SAhCO,SAACC,GAClBA,EAAGC,iBACH,IAAMC,EAAcnB,EAAMoB,MAAK,SAAAC,GAAI,OAAGA,EAAKC,WAAanB,GAAckB,EAAKE,QAAUpB,KAErF,IAAKgB,GAAeA,EAAYd,WAAaA,EAAU,OAAOO,GAAa,GAG3EY,MAAM,uCAAwC,CAC1CC,OAAQ,MACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUV,KAExBW,MAAK,WACFX,EAAYY,QAAS,EACrB9B,EAAQkB,GAERa,aAAaC,QAAQ,OAAQL,KAAKC,UAAUV,IACxCV,EACAuB,aAAaC,QAAQ,aAAc,IAAIC,KAAKA,KAAKC,MAAQ,QAAkBC,eAE3EJ,aAAaC,QAAQ,aAAc,IAAIC,KAAKA,KAAKC,MAAQ,MAAcC,eAI3EvB,EAAQwB,KAAK,QAEhBC,MAAMC,QAAQC,MAMX,UAEM7B,GAAa,sBAAMI,UAAU,UAAhB,yEAEf,gCACI,kCAEA,+BACI,mCAAK,uBAAO0B,QAAQ,aAAf,wBAAL,OACA,mCAAK,uBACGC,GAAG,aAAaC,KAAK,aAAcC,YAAY,oBAC/CC,UAAQ,EAACC,MAAO3C,EAAY4C,SAAU,SAAC9B,GAAD,OAAOb,EAAca,EAAG+B,OAAOF,aAG7E,sCAGJ,qBAAI/B,UAAU,aAAd,UACI,6BACI,uBAAO0B,QAAQ,WAAf,yBAEJ,6BACI,uBACIQ,KAAM1C,EAAc,OAAO,WAAYoC,KAAK,WAAWO,QAAQ,QAC/DR,GAAG,WAAWG,UAAQ,EAACC,MAAOzC,EAAU0C,SAAU,SAAC9B,GAAD,OAAOX,EAAYW,EAAG+B,OAAOF,YAGvF,6BACI,wBAAQG,KAAK,SAASE,QAAS,kBAAK3C,GAAgBD,IAApD,SACKA,EAAc,OAAO,mBAQtC,wBAAO6C,MAAO,CAACC,SAAU,QAAzB,UACI,uBAAOD,MAAO,CAACE,MAAO,QAASL,KAAK,WAAWM,QAAS9C,EAAiBsC,SAAU,kBAAKrC,GAAoBD,MADhH,iBAIA,uBACA,uBACA,+CAGJ,2DAEI,cAAC,IAAD,CAAM+C,GAAG,WAAT","file":"static/js/7.81361770.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst LogInPage =({users, setUser})=>{\r\n    const [identifier, setIdentifier] = useState('')\r\n    const [password, setPassword] = useState('');\r\n    const [passVisibile, setPassVisible] = useState(false);\r\n    const [toBeRememebered, setToBeRememebered] = useState(false);\r\n    const [userFound, setUserFound] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const handleLogging =(ev)=>{\r\n        ev.preventDefault();\r\n        const userMatched = users.find(user=> user.userName === identifier || user.email === identifier);\r\n\r\n        if (!userMatched || userMatched.password !== password) return setUserFound(false);\r\n        \r\n        \r\n        fetch('https://avocation.herokuapp.com/user', {\r\n            method: 'PUT',\r\n            headers: {\"Content-Type\": 'application/json'},\r\n            body: JSON.stringify(userMatched),\r\n        })\r\n        .then(()=>{\r\n            userMatched.logged = true;\r\n            setUser(userMatched);\r\n\r\n            localStorage.setItem('user', JSON.stringify(userMatched));\r\n            if (toBeRememebered){\r\n                localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 60 * 48 ).toISOString()); //remembered for two days\r\n            }else {\r\n                localStorage.setItem('expiryDate', new Date(Date.now() + 60000 * 120 ).toISOString()); //2 hours after logging in\r\n            }\r\n\r\n            \r\n            history.push('/');\r\n        })\r\n        .catch(console.log);\r\n\r\n        \r\n    }\r\n    return (\r\n        <main className=\"signing\">\r\n            <form onSubmit={handleLogging}>\r\n\r\n                { userFound || <span className=\"warning\">User name/email or password is not correct or doesn't exist</span> }\r\n\r\n                <table>\r\n                    <tbody>\r\n\r\n                    <tr>\r\n                        <td> <label htmlFor=\"identifier\">User Name:</label> </td>\r\n                        <td> <input \r\n                                id='identifier' name=\"identifier\"  placeholder=\"username or email\"\r\n                                required value={identifier} onChange={(ev)=> setIdentifier(ev.target.value)}\r\n                              />\r\n                        </td>\r\n                        <td> </td>\r\n                    </tr>\r\n\r\n                    <tr className=\"pass-feild\">\r\n                        <td> \r\n                            <label htmlFor=\"password\">Password:</label> \r\n                        </td>\r\n                        <td>\r\n                            <input \r\n                                type={passVisibile? 'text':'password'} name=\"password\" pattern=\".{5,}\" \r\n                                id='password' required value={password} onChange={(ev)=> setPassword(ev.target.value)}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={()=> setPassVisible(!passVisibile)}> \r\n                                {passVisibile? \"Hide\":\"Show\"}\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n                <label style={{fontSize: '17px'}}>\r\n                    <input style={{width: 'auto'}} type=\"checkbox\" checked={toBeRememebered} onChange={()=> setToBeRememebered(!toBeRememebered)}/>\r\n                    Remember Me\r\n                </label>\r\n                <br />\r\n                <br />\r\n                <button>Log In</button>\r\n            </form>\r\n\r\n            <p>\r\n                don't have an account yet? \r\n                <Link to=\"/sign-up\"> sign up </Link>\r\n            </p>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default LogInPage\r\n\r\n"],"sourceRoot":""}